---
import Link from "@/components/Link.astro";
import MyCrossword from "@/components/MyCrossword.tsx";
import Coincidence from "@/components/Coincidence.astro";
import lighthaven from "@/assets/lighthaven.jpg";
import Button from "@/components/Button.astro";
import { Image } from "astro:assets";
const images = import.meta.glob<{ default: ImageMetadata }>(
  "/src/img/*.{jpeg,jpg,png,gif,svg,webp,JPG}"
);
---
<section
  class="container rounded-xl mx-auto mb-8 bg-dark-500 border border-t border-b border-secondary-300"
  id="games"
>
  <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
    <div class="p-10 relative">
      <div class="relative">
        <Image
          alt={"Lighthaven"}
          class:list={[
            "glitch mb-2 rounded object-cover cursor-pointer",
          ]}
          src={images?.["/src/img/proset_1.JPG"]?.()}
          transition:name={"lighthaven"}
          id="trigger-image"
        />
        <div 
          id="modal-overlay"
          class="fixed inset-0 bg-black/70 opacity-0 transition-opacity duration-300 pointer-events-none z-40"
        >
          <div class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 z-50">
            <button 
              id="close-button"
              class="absolute -top-4 -right-4 w-8 h-8 bg-secondary-200 text-dark-500 rounded-full flex items-center justify-center opacity-0 transition-opacity duration-300"
              aria-label="Close modal"
            >
              âœ•
            </button>
            <Image
              alt={"Lighthaven Modal"}
              class:list={[
                "max-w-[80vw] max-h-[80vh] object-contain opacity-0 transition-opacity duration-300",
              ]}
              id="modal-image"
              src={images?.["/src/img/proset_puzzle_tablet.png"]?.()}
            />
          </div>
        </div>
      </div>
    </div>
    <div class="p-10">
      <h2 class="mb-8 text-2xl font-bold text-secondary-200">
        Run something
      </h2>
      <p class="mb-4 font-semibold">
        We will provide the venue, the resources, and the very eager audience, and you can run whatever experimental game concept you've been toying with.
        <br />  
        <br />
        Need a weirdly shaped space to build a gradient descent themed escape room? Want to run a game design tournament where you provide the board and pieces and contestants come up with the rules? Looking for hundreds of willing subjects for a social deception experiment that isn't quite ready for prime time? 
        <br />
        <br />
        Metagame is the conference for you.
        <br />
        <br />
        <div>
        <Button link="/contribute">
            Dooooo it
        </Button>
      </div>
      </p>
    </div>
  </div>
</section>

<script>
  const triggerImage = document.getElementById('trigger-image');
  const modalOverlay = document.getElementById('modal-overlay');
  const modalImage = document.getElementById('modal-image');
  const closeButton = document.getElementById('close-button');

  function openModal() {
    modalOverlay?.classList.add('opacity-100', 'pointer-events-auto');
    modalImage?.classList.add('opacity-100');
    closeButton?.classList.add('opacity-100');
  }

  function closeModal() {
    modalOverlay?.classList.remove('opacity-100', 'pointer-events-auto');
    modalImage?.classList.remove('opacity-100');
    closeButton?.classList.remove('opacity-100');
  }

  function handleClick(event: MouseEvent) {
    // Close if clicking the overlay (but not the image)
    if (event.target === modalOverlay) {
      closeModal();
    }
  }

  function handleKeyDown(event: KeyboardEvent) {
    if (event.key === 'Escape') {
      closeModal();
    }
  }

  triggerImage?.addEventListener('click', openModal);
  modalOverlay?.addEventListener('click', handleClick);
  closeButton?.addEventListener('click', closeModal);
  document.addEventListener('keydown', handleKeyDown);
</script>