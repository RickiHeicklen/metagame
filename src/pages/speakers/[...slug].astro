---
import Layout from "../../layouts/Layout.astro";
import { getCollection } from "astro:content";
import { Image } from "astro:assets";

export async function getStaticPaths() {
  const speakerEntries = await getCollection("speakers");
  const sessionEntries = await getCollection("sessions");
  return speakerEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: {
      entry,
      sessions: (() => {
        return sessionEntries.filter((session) =>
          session.data.speakerId.includes(entry.data.id)
        );
      })(),
    },
  }));
}

const images = import.meta.glob<{ default: ImageMetadata }>(
  "/src/assets/*.{jpeg,jpg,png,gif,svg}"
);

const { entry, sessions } = Astro.props;
const { Content } = await entry.render();

---

<Layout title={`${entry.data.name}`}>
  <article
    class="flex flex-col lg:flex-row gap-8 items-center justify-center mt-[5%] mx-10 pb-20 flex-wrap"
  >
    <div
      class="glitch bg-gradient-to-r from-secondary-700 w-full lg:w-[360px] lg:h-[436px] to-primary-700 text-white font-semibold rounded p-2 flex items-center justify-center"
    >
      <img
        alt={entry.data.name}
        class="rounded-2xl object-cover w-full lg:w-[350px] lg:h-[420px]"
        src={`/images/${entry.data.image.split('/').pop()}`}
        width="400"
        transition:name={`${entry.slug}-image`}
      />
    </div>

    <div class="flex-grow">
      <h1 class="text-4xl font-bold mb-4">{entry.data.name}</h1>
      <p class="text-base text-gray-700">{entry.data.description}</p>
    </div>
  </article>
</Layout>